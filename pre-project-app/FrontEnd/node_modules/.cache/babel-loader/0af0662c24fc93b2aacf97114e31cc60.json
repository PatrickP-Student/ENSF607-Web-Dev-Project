{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Patrick Pickard 2.0\\\\Documents\\\\U of C M. Eng Software Spec. Program\\\\ENSF 607 - Software Design and Architecture l\\\\Web Dev Project\\\\ENSF607-Web-Dev-Project\\\\pre-project-app\\\\src\\\\index.js\";\nimport { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Button from './components/Button';\nimport \"bulma/css/bulma.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.countUp = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.countDown = () => {\n      if (this.state.count > 0) {\n        this.setState({\n          count: this.state.count - 1\n        });\n      }\n    };\n\n    this.onChange = e => {\n      if (isNaN(e.target.value)) return;\n\n      if (e.target.value == '') {\n        this.setState({\n          [e.target.name]: 0\n        });\n        return;\n      }\n\n      this.setState({\n        [e.target.name]: parseInt(e.target.value)\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        count: this.state.fieldInput\n      });\n      this.setState({\n        fieldInput: ''\n      });\n    };\n\n    this.state = {\n      count: 0,\n      fieldInput: ''\n    };\n  }\n\n  render() {\n    let {\n      count\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Counter\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"dividerHuge\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TextInputField\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"dividerBig\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"fieldInput\",\n              style: inputBox,\n              width: \"200%\",\n              placeholder: \"Set counter...\",\n              value: this.state.fieldInput,\n              onChange: this.onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              \"font-size\": \"125%\",\n              value: \"Submit\",\n              className: \"btn\",\n              style: submitbutton\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"dividerBig\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            title: \"Up\",\n            task: () => this.countUp()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"dividerSmall\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            title: \"Down\",\n            task: () => this.countDown()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\nconst inputBox = {\n  background: 'AliceBlue',\n  width: '15%',\n  padding: '5px',\n  margin: '8px 0'\n};\nconst submitbutton = {\n  background: 'MediumAquaMarine',\n  color: 'Black',\n  border: 'none',\n  bordercolor: 'DarkGray',\n  padding: '7px 12px',\n  borderRadius: '2px',\n  cursor: 'pointer'\n};\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 116,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Patrick Pickard 2.0/Documents/U of C M. Eng Software Spec. Program/ENSF 607 - Software Design and Architecture l/Web Dev Project/ENSF607-Web-Dev-Project/pre-project-app/src/index.js"],"names":["Component","ReactDOM","Button","App","constructor","countUp","setState","count","state","countDown","onChange","e","isNaN","target","value","name","parseInt","onSubmit","preventDefault","fieldInput","render","inputBox","submitbutton","background","width","padding","margin","color","border","bordercolor","borderRadius","cursor","document","getElementById"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Button from './components/Button';\nimport \"bulma/css/bulma.css\"\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      count: 0,\n      fieldInput: '',\n    };\n  }\n\n  countUp = () => {\n    this.setState({\n      count: this.state.count + 1\n    });\n  };\n\n  countDown = () => {\n    if (this.state.count > 0) {\n      this.setState({\n        count: this.state.count - 1\n      });\n    }\n  };\n\n  onChange = (e) => {\n    if (isNaN(e.target.value)) return;\n    if (e.target.value == '') {\n      this.setState({ [e.target.name]: 0 });\n      return;\n    }\n    this.setState({ [e.target.name]: parseInt(e.target.value) });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.setState({\n      count: this.state.fieldInput\n    });\n    this.setState({ fieldInput: '' });\n  };\n\n  render() {\n    let { count } = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"Counter\">\n            <h1>\n              <div class=\"dividerHuge\" />\n              <strong>{count}</strong>\n            </h1>\n          </div>\n          <div className=\"TextInputField\">\n            <form onSubmit={this.onSubmit}>\n              <div class=\"dividerBig\" />\n              <input\n                type=\"text\"\n                name=\"fieldInput\"\n                style={inputBox}\n                width=\"200%\"\n                placeholder=\"Set counter...\"\n                value={this.state.fieldInput}\n                onChange={this.onChange}\n              />\n              <input\n                type=\"submit\"\n                font-size=\"125%\"\n                value=\"Submit\"\n                className=\"btn\"\n                style={submitbutton}\n              />\n            </form>\n          </div>\n          <div className=\"Buttons\">\n            <div class=\"dividerBig\" />\n            <Button\n              title=\"Up\"\n              task={() => this.countUp()}\n            />\n            <div class=\"dividerSmall\" />\n            <Button\n              title=\"Down\"\n              task={() => this.countDown()}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n} export default App;\n\nconst inputBox = {\n  background: 'AliceBlue',\n  width: '15%',\n  padding: '5px',\n  margin: '8px 0',\n}\n\nconst submitbutton = {\n  background: 'MediumAquaMarine',\n  color: 'Black',\n  border: 'none',\n  bordercolor: 'DarkGray',\n  padding: '7px 12px',\n  borderRadius: '2px',\n  cursor: 'pointer',\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}